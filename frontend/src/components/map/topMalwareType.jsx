import React from "react";
import { useGetAllIncidentsQuery } from "../../redux/api/incidentApiSlice";

const TopMalwareType = () => {
  const { data: incidents = [], error, isLoading } = useGetAllIncidentsQuery();

  // Define color mapping for malware types
  const malwareColors = {
    Malware: "bg-red-500",
    Phishing: "bg-blue-500",
    Ransomware: "bg-green-500",
    DDoS: "bg-orange-500",
    "General Threat": "bg-gray-500",
    Botnet: "bg-purple-500",
    Exploits: "bg-yellow-500",
  };

  // Count occurrences of each malware type
  const malwareCount = incidents.reduce((acc, incident) => {
    const malwareType = incident.type || "General Threat";
    acc[malwareType] = (acc[malwareType] || 0) + 1;
    return acc;
  }, {});

  // Sort malware types by attack frequency
  const sortedMalwareTypes = Object.entries(malwareCount)
    .map(([malware, count]) => ({
      malware,
      count,
      percentage: ((count / incidents.length) * 100).toFixed(1), // Rounded to 1 decimal place
    }))
    .sort((a, b) => b.count - a.count);

  if (isLoading)
    return <p className="text-gray-400 text-center">Loading malware data...</p>;

  if (error)
    return <p className="text-red-500 text-center">Error loading data</p>;

  return (
    <div className="p-5 rounded-lg shadow-lg bg-gray-950 min-h-[350px]">
      <h2 className="text-xl font-semibold text-white mb-3 text-center">
        ðŸ”¥ Top Malware Types
      </h2>
      <p className="text-gray-400 text-sm mb-4 text-center">
        Most detected malware types in cyber attacks.
      </p>

      <ul className="space-y-3">
        {sortedMalwareTypes.length > 0 ? (
          sortedMalwareTypes.map((malware, index) => (
            <li
              key={index}
              className="flex justify-between items-center bg-gray-800 p-3 rounded-md shadow-sm hover:bg-gray-700 transition-all"
            >
              {/* Malware Type & Color Indicator */}
              <div className="flex items-center space-x-3">
                <span
                  className={`w-3 h-3 rounded-full ${
                    malwareColors[malware.malware] || "bg-gray-500"
                  }`}
                ></span>
                <span className="text-sm font-medium text-white">
                  {malware.malware}
                </span>
              </div>

              {/* Attack Count & Percentage */}
              <span className="text-sm font-semibold text-gray-300">
                {malware.count} Attacks
                <span className="ml-2 text-[#ff335e]">
                  ({malware.percentage}%)
                </span>
              </span>
            </li>
          ))
        ) : (
          <p className="text-gray-400 text-center">No data available</p>
        )}
      </ul>
    </div>
  );
};

export default TopMalwareType;
